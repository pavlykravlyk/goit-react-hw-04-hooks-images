{"version":3,"sources":["components/ImageGallery/ImageGallery.module.css","components/Modal/Modal.module.css","App.module.css","components/Button/Button.module.css","components/Searchbar/Searchbar.module.css","components/Modal/Modal.jsx","components/Searchbar/Searchbar.jsx","components/ImageGallery/ImageGallery.jsx","components/Button/Button.jsx","services/pixabay-api.jsx","App.js","index.js"],"names":["module","exports","Modal","onClose","children","useEffect","window","addEventListener","handleKeyDown","removeEventListener","code","createPortal","className","styles","Overlay","onClick","currentTarget","target","document","querySelector","Searchbar","onSubmit","useState","searchQuery","setSearchQuery","event","preventDefault","trim","toast","error","SearchForm","type","SearchForm__button","SearchForm__button_label","SearchForm__input","autoComplete","autoFocus","placeholder","value","onChange","toLowerCase","ImageGallery","images","onOpenModal","map","image","ImageGalleryItem","height","ImageGalleryItem__image","src","webformatURL","alt","tags","id","LoadMoreBtn","onLoadMore","Button","fetchImages","page","searchParams","URLSearchParams","key","orientation","image_type","q","per_page","fetch","App","showModal","setShowModal","setPage","setImages","setError","currImg","setCurrImg","status","setStatus","findImageByName","scroll","scrollToBottom","a","PixabayApiService","response","ok","json","articles","prevState","hits","Promise","reject","Error","toggleModal","message","length","color","width","largeImageURL","autoClose","propTypes","PropTypes","string","number","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d9748245.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__DncjJ\",\"ImageGalleryItem\":\"ImageGallery_ImageGalleryItem__30xkQ\",\"ImageGalleryItem__image\":\"ImageGallery_ImageGalleryItem__image__2F6BC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__2AxMb\",\"Modal\":\"Modal_Modal__2WBTT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16ZpL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3R1xi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__DjWH3\",\"SearchForm\":\"Searchbar_SearchForm__1ac2l\",\"SearchForm__button\":\"Searchbar_SearchForm__button__wM7NY\",\"SearchForm__button_label\":\"Searchbar_SearchForm__button_label__lQViY\",\"SearchForm__input\":\"Searchbar_SearchForm__input__1-9Kh\"};","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport styles from './Modal.module.css';\n\nexport default function Modal({ onClose, children }) {\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, []);\n\n  const handleKeyDown = ({ code }) => {\n    code === 'Escape' && onClose();\n  };\n\n  const handleOverlayClick = ({ currentTarget, target }) => {\n    currentTarget === target && onClose();\n  };\n\n  return createPortal(\n    <div className={styles.Overlay} onClick={handleOverlayClick}>\n      <div className={styles.Modal}>{children}</div>\n    </div>,\n    document.querySelector('#modal-root'),\n  );\n}\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport { AiOutlineSearch } from 'react-icons/ai';\nimport styles from './Searchbar.module.css';\n\nexport default function Searchbar({ onSubmit }) {\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const handleSearchQueryChange = event => {\n    setSearchQuery(event.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (searchQuery.trim() !== '') {\n      onSubmit(searchQuery);\n      setSearchQuery('');\n    } else toast.error('Input field must not be empty');\n  };\n\n  return (\n    <header className={styles.Searchbar}>\n      <form onSubmit={handleSubmit} className={styles.SearchForm}>\n        <button type=\"submit\" className={styles.SearchForm__button}>\n          <span className={styles.SearchForm__button_label}>Search</span>\n          <AiOutlineSearch />\n        </button>\n\n        <input\n          className={styles.SearchForm__input}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          value={searchQuery}\n          onChange={handleSearchQueryChange}\n        />\n      </form>\n    </header>\n  );\n}\n\nSearchbar.propTypes = { searchQuery: PropTypes.string };\n","import styles from './ImageGallery.module.css';\n\nexport default function ImageGallery({ images, onOpenModal }) {\n  return (\n    <ul className={styles.ImageGallery}>\n      {images.map(image => (\n        <li\n          key={image.id}\n          onClick={() => {\n            onOpenModal(image);\n          }}\n          className={styles.ImageGalleryItem}\n        >\n          <img\n            height={260}\n            className={styles.ImageGalleryItem__image}\n            src={image.webformatURL}\n            alt={image.tags}\n          />\n        </li>\n      ))}\n    </ul>\n  );\n}\n","import styles from './Button.module.css';\n\nexport default function LoadMoreBtn({ onLoadMore }) {\n  return (\n    <button onClick={onLoadMore} type=\"button\" className={styles.Button}>\n      load more\n    </button>\n  );\n}\n","import PropTypes from 'prop-types';\n\nconst BASE_URL = 'https://pixabay.com/api/';\nconst API_KEY = '23902495-d255dd7217da8bb07f7abae59';\n\nexport default function fetchImages(searchQuery, page) {\n  const searchParams = new URLSearchParams({\n    key: API_KEY,\n    orientation: 'horizontal',\n    image_type: 'photo',\n    q: searchQuery,\n    page: page,\n    per_page: 12,\n  });\n\n  return fetch(`${BASE_URL}?${searchParams}`);\n}\n\nfetchImages.propTypes = {\n  searchQuery: PropTypes.string,\n  page: PropTypes.number,\n};\n","import styles from './App.module.css';\nimport { useState, useEffect } from 'react';\nimport { animateScroll as scroll } from 'react-scroll';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Loader from 'react-loader-spinner';\nimport Modal from './components/Modal';\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\nimport Button from './components/Button';\nimport PixabayApiService from './services/pixabay-api';\n\nexport default function App() {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [showModal, setShowModal] = useState(false);\n  const [page, setPage] = useState(1);\n  const [images, setImages] = useState([]);\n  const [error, setError] = useState(null);\n  const [currImg, setCurrImg] = useState({});\n  const [status, setStatus] = useState('idle');\n\n  useEffect(() => {\n    if (searchQuery) {\n      setStatus('pending');\n      setPage(1);\n      setImages([]);\n      findImageByName();\n      scroll.scrollToBottom();\n    }\n  }, [searchQuery]);\n\n  useEffect(() => {\n    if (searchQuery && page !== 1) {\n      setStatus('pending');\n      findImageByName();\n      scroll.scrollToBottom();\n    }\n  }, [page]);\n\n  const findImageByName = async () => {\n    try {\n      const response = await PixabayApiService(searchQuery, page);\n      if (response.ok) {\n        const articles = await response.json();\n        setImages(prevState => [...prevState, ...articles.hits]);\n        setStatus('resolved');\n      } else {\n        return Promise.reject(new Error(`No matches found for ${searchQuery}`));\n      }\n    } catch (error) {\n      setError(error);\n      setStatus('rejected');\n      toast.error('Input field must not be empty');\n    }\n  };\n\n  const toggleModal = image => {\n    setShowModal(!showModal);\n    setCurrImg(image);\n  };\n\n  return (\n    <div className={styles.App}>\n      <Searchbar onSubmit={setSearchQuery} />\n      {status === 'idle' && <div>Free images</div>}\n\n      {status === 'rejected' && <h1>{error.message}</h1>}\n\n      {status === 'resolved' && (\n        <>\n          <ImageGallery images={images} onOpenModal={toggleModal} />\n          {images.length !== 0 && (\n            <Button onLoadMore={() => setPage(prevState => prevState + 1)} />\n          )}\n          {images.length === 0 && <div>{searchQuery} not found</div>}\n        </>\n      )}\n\n      {status === 'pending' && (\n        <>\n          <ImageGallery images={images} onOpenModal={toggleModal} />\n          <Loader type=\"ThreeDots\" color=\"#3f51b5\" height={80} width={80} />\n        </>\n      )}\n\n      {showModal && (\n        <Modal onClose={toggleModal}>\n          <img src={currImg.largeImageURL} alt={currImg.tags} />\n        </Modal>\n      )}\n      <ToastContainer autoClose={3000} />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}